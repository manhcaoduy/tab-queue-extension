(()=>{"use strict";let e=document.getElementById("enable");const t={};function n(e){!async function(e){try{await chrome.tabs.move(e,{index:0}),console.log(`Success move tabId ${e}`)}catch(t){"Error: Tabs cannot be edited right now (user may be dragging a tab)."==t&&setTimeout((()=>move(e)),50)}}(e.tabId)}const o=new Promise(((e,t)=>{chrome.storage.sync.get(null,(n=>{if(chrome.runtime.lastError)return t(chrome.runtime.lastError);e(n)}))})).then((o=>{let c;Object.assign(t,o),void 0===t.isEnableKey?(c=!1,chrome.storage.sync.set({isEnableKey:!1},(function(){console.log("Initialize isEnableKey false")}))):c=t.isEnableKey,console.log(`isEnabled is ${c}`),!0===c?(chrome.tabs.onActivated.addListener(n),e.checked=!0):e.checked=!1}));!async function(){try{await o,e.addEventListener("change",(e=>{e.target.checked?(chrome.storage.sync.set({isEnableKey:!0},(function(){console.log("Enable!")})),chrome.tabs.onActivated.addListener(n)):(chrome.storage.sync.set({isEnableKey:!1},(function(){console.log("Disable!")})),chrome.tabs.onActivated.removeListener(n))}))}catch(e){console.log(`error when init storage cache: ${e}`)}}()})();