(()=>{"use strict";async function e(t){try{await chrome.tabs.move(t.tabId,{index:0}),console.log("Success.")}catch(n){"Error: Tabs cannot be edited right now (user may be dragging a tab)."==n&&setTimeout((()=>e(t)),50)}}let t=document.getElementById("enable");const n={},o=new Promise(((e,t)=>{chrome.storage.sync.get(null,(n=>{if(chrome.runtime.lastError)return t(chrome.runtime.lastError);e(n)}))})).then((o=>{let c;Object.assign(n,o),void 0===n.isEnableKey?(c=!1,chrome.storage.sync.set({isEnableKey:!1},(function(){console.log("Initialize isEnableKey false")}))):c=n.isEnableKey,!0===c?(chrome.tabs.onActivated.addListener((t=>e(t))),t.checked=!0):t.checked=!1}));chrome.action.onClicked.addListener((async e=>{try{await o}catch(e){console.log(`error when init storage cache: ${e}`)}})),t.addEventListener("change",(t=>{t.target.checked?(chrome.storage.sync.set({isEnableKey:!0},(function(){console.log("Enable!")})),chrome.tabs.onActivated.addListener((t=>e(t)))):chrome.storage.sync.set({isEnableKey:!1},(function(){console.log("Disable!")}))}))})();